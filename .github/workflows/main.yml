name: CI/CD For React_app

on:
  push:
    branches:
      - master

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: 16

        - name: Install dependencies
          run: npm install

        - name: Build website
          run: npm run build

        - name: Slack Status
          if: always()
          uses: abinoda/slack-action@master
          env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          with:
            # custom message to send to slack
            args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Contributor :* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}' 
        

        # - name: Slack Status
        #   if: always()
        #   uses: ravsamhq/notify-slack-action@v1
        #   env:
        #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        #   with:
        #     status: ${{ job.status }}
        #     notify_when: 'failure,success'
        #     notification_title: 'CI/CD On {repo}'
        #     message_format: '{emoji} *{workflow}* is *{status_message}*'
        #     footer: 'Linked to Repo <{repo_url}|{repo}>'

